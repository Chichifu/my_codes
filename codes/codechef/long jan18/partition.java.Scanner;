import java.util.Scanner;
import java.util.Arrays;
class partition
{
	static int p;
	static int v;
	public static void main(String[]args)
	{
		Scanner scan=new Scanner(System.in);
		int t,i,j,k,l;
		t=scan.nextInt();
		for(i=0;i<t;i++)
		{
			int n=scan.nextInt();
			v=n;
			int m=scan.nextInt();
			p=m;
			int sum=0;
			l=0;
			int A[]=new int[m-1];
			for(j=1;j<n;j++)
			{
				A[l]=j;
				sum=sum+A[l];
				l++;
			}
			for(k=n+1;k<=m;k++)
			{
				A[l]=k;
				sum=sum+A[l];
				l++;
			}
			if(sum%2!=0)
			{
				System.out.println("impossible");
			}
			else
			{
				boolean dp[][]=new boolean[m-1][sum+1];
				for(int g=0;g<m-1;g++)
				{
					dp[g][0]=true;
				}

				if(A[0]<=sum)
				{
					dp[0][A[0]]=true;
				}

				for(int y=0;y<m-1;y++)
				{
					for(int f=0;f<sum+1;f++)
					{
						dp[y][f] = (A[y]<=f) ? (dp[y-1][f] ||
                                           dp[y-1][j-arr[y]])
                                         : dp[y - 1][f];
					}
				}
				if(dp[m-2][sum]==false)
				{
					System.out.println("impossible");
				}
				ArrayList<Integer> p =new ArrayList<>();
				printSubsetsRec(A,m-2,sum,p);
			}
		}
	}
	static void printSubsetsRec(int arr[], int i, int sum, 
                                         ArrayList<Integer> p)
    {
        if (i == 0 && sum != 0 && dp[0][sum])
        {
            p.add(arr[i]);
            display(p);
            p.clear();
            return;
        }
      
        else if (i == 0 && sum == 0)
        {
            display(p);
            p.clear();
            return;
        }
      
        else if (dp[i-1][sum])
        {
            ArrayList<Integer> b = new ArrayList<>();
            b.addAll(p);
            printSubsetsRec(arr, i-1, sum, b);
        }
      
        else if (sum >= arr[i] && dp[i-1][sum-arr[i]])
        {
            p.add(arr[i]);
            printSubsetsRec(arr, i-1, sum-arr[i], p);
        }
    }
    static void display(ArrayList<Integer> s)
    {
    	int B[]=s.toArray(new int[s.size()]);
    	int C[]=new int[p];
    	Arrays.fill(C,0);
    	for(int i=0;i<=v.size();i++)
    	{
    		C[B[i]-1]=1;
    	}
    	C[v-1]=2;
    	for(int g=0;g<p;g++)
    	{
    		System.out.println(C[g]);
    	}
    }
}